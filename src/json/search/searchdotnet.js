export const pagesdotnet = [
  "home",
  // Clean Architecture
  "monolithic",
  "clean architecture",
  "clean",
  "multilayer architecture",
  "multilayer",
  // CLR
  "clr",
  "common language runtime",
  "jit",
  "just in time",
  // Controller
  "action selectors",
  "action method",
  "action result",
  "ActionVerbs ",
  "NonAction ",
  // Controller View data transfer
  "view bag ",
  "view data",
  "temp data",
  "controller view data transfert",
  // CQRS
  "cqrs",
  "command queries responbility segregation",
  // Design Principle vs Design Pattern
  "design pattern versus design principle",
  "difference between design pattern and design principle",
  "design pattern",
  "design principle",
  // Dependency injection
  "dependency injection",
  "inversion of control",
  "add transcient",
  "add scoped",
  "add singleton",
  // difference  between .net and .net core
  ".net",
  "dotnet",
  "difference between dotnet standard and dotnet core",
  "difference between .net standard and .net core",
  ".net .net core",
  // Entity Framework
  "entity framework",
  "entity framework core",
  // HTTPS
  "https",
  "http",
  "https versus http",
  "http versus https",
  "ssl",
  "tsl",
  "hyper text transfer protocol",
  "secure socket layer",
  "transfert socket layer",
  // HTTP Request Methods
  "http request methods",
  "http methods",
  "get versus post",
  "get post",
  "post",
  "get",
  "put",
  "head",
  "delete",
  "patch",
  "options",
  "post method",
  "get method",
  "put method",
  "head method",
  "delete method",
  "patch method",
  "options method",
  // Middleware
  "middleware",
  // MVC Architecture
  "mvc architecture",
  "mvc",
  "model view controller",
  // Nuget packages
  "nuget packages",
  "odata",
  "fluent validation",
  "open api",
  // Services
  "service",
  "micro service",
  // Singleton Mediator Observer Command
  "singleton",
  "mediator",
  "observer",
  "command",
  // Boxing and Unboxing
  "boxing",
  "unboxing",
  // Collections
  "collections",
  "dictionary",
  "stack",
  "queue",
  "array list",
  "hashtable",
  "array versus array list",
  "hashtable versus dictionary",
  // Covariance et Contravariance
  "covariance",
  "contravariance",
  // Data Types
  "data types",
  "dynamic type",
  "nullable type",
  "discard type",
  "dynamic",
  "nullable",
  "discard",
  "extension method",
  "extension",
  // Delegates
  "delegate",
  "func",
  "action",
  "predicate",
  "event",
  "func delegate",
  "action delegate",
  "predicate delegate",
  "event delegate",
  // Enumeration and Indexer
  "enumeration",
  "indexer",
  "generic",
  // Modifiers
  "access modifiers",
  "non access modifiers",
  "modifiers",
  "public",
  "private",
  "protected",
  "internal",
  "protected",
  "internal",
  "protected internal",
  "private protected",
  "sealed",
  "abstract",
  "static",
  "virtual",
  "override",
  "readonly",
  "const",
  "volatile",
  "unsafe",
  // New features in C# 9
  "csharp new features",
  "top level statements",
  "init only setters",
  "record",
  "pattern matching",
  "target typed new",
  // OOP
  "object oriented programming",
  "inheritance",
  "abstraction",
  "polymorphism",
  "encapsulation",
  "properties",
  // Ref, in and Out
  "out",
  "ref versus out",
  "in",
  // keyword instructions
  "partial type",
  "partial",
  "lock",
  "yield",
  // string2int
  "string to int",
  "convert",
  "parse",
  "try parse",
  // String Builder
  "string builder",
  // Thread Task
  "task",
  "thread",
  // Tuple
  "tuple",
  "value tuple",
  // Type System
  "type sytem",
  "struct",
  "record",
  "struct and class",
  "struct versus class",
  "difference between class and struct",
];